{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sergio/nextjs-dashboard/app/ui/button.tsx"],"sourcesContent":["import clsx from 'clsx';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  children: React.ReactNode;\n}\n\nexport function Button({ children, className, ...rest }: ButtonProps) {\n  return (\n    <button\n      {...rest}\n      className={clsx(\n        'flex h-10 items-center rounded-lg bg-blue-500 px-4 text-sm font-medium text-white transition-colors hover:bg-blue-400 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-blue-500 active:bg-blue-600 aria-disabled:cursor-not-allowed aria-disabled:opacity-50',\n        className,\n      )}\n    >\n      {children}\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAMO,SAAS,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,MAAmB;IAClE,qBACE,0VAAC;QACE,GAAG,IAAI;QACR,WAAW,CAAA,GAAA,sLAAA,CAAA,UAAI,AAAD,EACZ,kTACA;kBAGD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sergio/nextjs-dashboard/app/lib/actions.ts"],"sourcesContent":["'use server';\r\n \r\nimport { z } from 'zod';\r\nimport { revalidatePath } from 'next/cache';\r\nimport { redirect } from 'next/navigation';\r\nimport postgres from 'postgres';\r\n \r\nconst FormSchema = z.object({\r\n    id: z.string(),\r\n    customerId: z.string({\r\n      invalid_type_error: 'Please select a customer.',\r\n    }),\r\n    amount: z.coerce\r\n      .number()\r\n      .gt(0, { message: 'Please enter an amount greater than $0.' }),\r\n    status: z.enum(['pending', 'paid'], {\r\n      invalid_type_error: 'Please select an invoice status.',\r\n    }),\r\n    date: z.string(),\r\n  });\r\n \r\nconst CreateInvoice = FormSchema.omit({ id: true, date: true });\r\n \r\nexport async function createInvoice(formData: FormData) {\r\n    revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n  const validatedFields = CreateInvoice.safeParse({\r\n    customerId: formData.get('customerId'),\r\n        amount: formData.get('amount'),\r\n        status: formData.get('status'),\r\n        \r\n      });\r\n      const amountInCents = amount * 100;\r\n      const date = new Date().toISOString().split('T')[0];\r\n \r\n  await sql`\r\n    INSERT INTO invoices (customer_id, amount, status, date)\r\n    VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\r\n  `;\r\n  \r\n}\r\n// Use Zod to update the expected types\r\nconst UpdateInvoice = FormSchema.omit({ id: true, date: true });\r\n \r\n// ...\r\n \r\nexport async function updateInvoice(id: string, formData: FormData) {\r\n  const { customerId, amount, status } = UpdateInvoice.parse({\r\n    customerId: formData.get('customerId'),\r\n    amount: formData.get('amount'),\r\n    status: formData.get('status'),\r\n  });\r\n \r\n  const amountInCents = amount * 100;\r\n \r\n  await sql`\r\n    UPDATE invoices\r\n    SET customer_id = ${customerId}, amount = ${amountInCents}, status = ${status}\r\n    WHERE id = ${id}\r\n  `;\r\n \r\n  revalidatePath('/dashboard/invoices');\r\n  redirect('/dashboard/invoices');\r\n}\r\nexport async function deleteInvoice(id: string) {\r\n  await sql`DELETE FROM invoices WHERE id = ${id}`;\r\n  revalidatePath('/dashboard/invoices');\r\n}\r\nexport type State = {\r\n    errors?: {\r\n      customerId?: string[];\r\n      amount?: string[];\r\n      status?: string[];\r\n    };\r\n    message?: string | null;\r\n  };\r\n   \r\n  export async function createInvoice(prevState: State, formData: FormData) {\r\n    // ...\r\n  }"],"names":[],"mappings":";;;;;;IA6EwB,gBAAA,WAAA,GAAA,CAAA,GAAA,kUAAA,CAAA,wBAAA,EAAA,8CAAA,kUAAA,CAAA,aAAA,EAAA,KAAA,GAAA,kUAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sergio/nextjs-dashboard/app/ui/invoices/create-form.tsx"],"sourcesContent":["'use client';\n\nimport { CustomerField } from '@/app/lib/definitions';\nimport Link from 'next/link';\nimport {\n  CheckIcon,\n  ClockIcon,\n  CurrencyDollarIcon,\n  UserCircleIcon,\n} from '@heroicons/react/24/outline';\nimport { Button } from '@/app/ui/button';\nimport { createInvoice, State } from '@/app/lib/actions';\nimport { useActionState } from 'react';\n\n\nexport default function Form({ customers }: { customers: CustomerField[] }) {\n  const initialState: State = { message: null, errors: {} };\n\n  const [state, formAction] = useActionState(createInvoice, initialState);\n \n  return <form action={formAction}>...</form>;\n  return (\n    <form action={createInvoice}>\n      <div className=\"rounded-md bg-gray-50 p-4 md:p-6\">\n        {/* Customer Name */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"customer\" className=\"mb-2 block text-sm font-medium\">\n            Choose customer\n          </label>\n          <div className=\"relative\">\n            <select\n              id=\"customer\"\n              name=\"customerId\"\n              className=\"peer block w-full cursor-pointer rounded-md border border-gray-200 py-2 pl-10 text-sm outline-2 placeholder:text-gray-500\"\n              defaultValue=\"\"\n            >\n              <option value=\"\" disabled>\n                Select a customer\n              </option>\n              {customers.map((customer) => (\n                <option key={customer.id} value={customer.id}>\n                  {customer.name}\n                </option>\n              ))}\n            </select>\n            <UserCircleIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500\" />\n          </div>\n        </div>\n\n        {/* Invoice Amount */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"amount\" className=\"mb-2 block text-sm font-medium\">\n            Choose an amount\n          </label>\n          <div className=\"relative mt-2 rounded-md\">\n            <div className=\"relative\">\n              <input\n                id=\"amount\"\n                name=\"amount\"\n                type=\"number\"\n                step=\"0.01\"\n                placeholder=\"Enter USD amount\"\n                className=\"peer block w-full rounded-md border border-gray-200 py-2 pl-10 text-sm outline-2 placeholder:text-gray-500\"\n                required\n              />\n              <CurrencyDollarIcon className=\"pointer-events-none absolute left-3 top-1/2 h-[18px] w-[18px] -translate-y-1/2 text-gray-500 peer-focus:text-gray-900\" />\n            </div>\n          </div>\n        </div>\n\n        {/* Invoice Status */}\n        <fieldset>\n          <legend className=\"mb-2 block text-sm font-medium\">\n            Set the invoice status\n          </legend>\n          <div className=\"rounded-md border border-gray-200 bg-white px-[14px] py-3\">\n            <div className=\"flex gap-4\">\n              <div className=\"flex items-center\">\n                <input\n                  id=\"pending\"\n                  name=\"status\"\n                  type=\"radio\"\n                  value=\"pending\"\n                  className=\"h-4 w-4 cursor-pointer border-gray-300 bg-gray-100 text-gray-600 focus:ring-2\"\n                />\n                <label\n                  htmlFor=\"pending\"\n                  className=\"ml-2 flex cursor-pointer items-center gap-1.5 rounded-full bg-gray-100 px-3 py-1.5 text-xs font-medium text-gray-600\"\n                >\n                  Pending <ClockIcon className=\"h-4 w-4\" />\n                </label>\n              </div>\n              <div className=\"flex items-center\">\n                <input\n                  id=\"paid\"\n                  name=\"status\"\n                  type=\"radio\"\n                  value=\"paid\"\n                  className=\"h-4 w-4 cursor-pointer border-gray-300 bg-gray-100 text-gray-600 focus:ring-2\"\n                />\n                <label\n                  htmlFor=\"paid\"\n                  className=\"ml-2 flex cursor-pointer items-center gap-1.5 rounded-full bg-green-500 px-3 py-1.5 text-xs font-medium text-white\"\n                >\n                  Paid <CheckIcon className=\"h-4 w-4\" />\n                </label>\n              </div>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n      <div className=\"mt-6 flex justify-end gap-4\">\n        <Link\n          href=\"/dashboard/invoices\"\n          className=\"flex h-10 items-center rounded-lg bg-gray-100 px-4 text-sm font-medium text-gray-600 transition-colors hover:bg-gray-200\"\n        >\n          Cancel\n        </Link>\n        <Button type=\"submit\">Create Invoice</Button>\n      </div>\n    </form>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AAOA;AACA;AACA;AAZA;;;;;;;AAee,SAAS,KAAK,EAAE,SAAS,EAAkC;IACxE,MAAM,eAAsB;QAAE,SAAS;QAAM,QAAQ,CAAC;IAAE;IAExD,MAAM,CAAC,OAAO,WAAW,GAAG,CAAA,GAAA,iTAAA,CAAA,iBAAc,AAAD,EAAE,kJAAA,CAAA,gBAAa,EAAE;IAE1D,qBAAO,0VAAC;QAAK,QAAQ;kBAAY;;;;;;;AAsGnC","debugId":null}},
    {"offset": {"line": 80, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sergio/nextjs-dashboard/node_modules/.pnpm/next%4015.4.0-canary.3_react-_a20fa6a80afe39c5b39b7f1351731cd9/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4MAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sergio/nextjs-dashboard/node_modules/.pnpm/clsx%402.1.1/node_modules/clsx/dist/clsx.mjs"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f)}else for(f in e)e[f]&&(n&&(n+=\" \"),n+=f);return n}export function clsx(){for(var e,t,f=0,n=\"\",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;"],"names":[],"mappings":";;;;AAAA,SAAS,EAAE,CAAC;IAAE,IAAI,GAAE,GAAE,IAAE;IAAG,IAAG,YAAU,OAAO,KAAG,YAAU,OAAO,GAAE,KAAG;SAAO,IAAG,YAAU,OAAO,GAAE,IAAG,MAAM,OAAO,CAAC,IAAG;QAAC,IAAI,IAAE,EAAE,MAAM;QAAC,IAAI,IAAE,GAAE,IAAE,GAAE,IAAI,CAAC,CAAC,EAAE,IAAE,CAAC,IAAE,EAAE,CAAC,CAAC,EAAE,CAAC,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAC,OAAM,IAAI,KAAK,EAAE,CAAC,CAAC,EAAE,IAAE,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;AAAQ,SAAS;IAAO,IAAI,IAAI,GAAE,GAAE,IAAE,GAAE,IAAE,IAAG,IAAE,UAAU,MAAM,EAAC,IAAE,GAAE,IAAI,CAAC,IAAE,SAAS,CAAC,EAAE,KAAG,CAAC,IAAE,EAAE,EAAE,KAAG,CAAC,KAAG,CAAC,KAAG,GAAG,GAAE,KAAG,CAAC;IAAE,OAAO;AAAC;uCAAgB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Sergio/nextjs-dashboard/node_modules/.pnpm/next%4015.4.0-canary.3_react-_a20fa6a80afe39c5b39b7f1351731cd9/node_modules/next/src/build/webpack/loaders/next-flight-loader/action-client-wrapper.ts"],"sourcesContent":["// This file must be bundled in the app's client layer, it shouldn't be directly\n// imported by the server.\n\nexport { callServer } from 'next/dist/client/app-call-server'\nexport { findSourceMapURL } from 'next/dist/client/app-find-source-map-url'\n\n// A noop wrapper to let the Flight client create the server reference.\n// See also: https://github.com/facebook/react/pull/26632\n// Since we're using the Edge build of Flight client for SSR [1], here we need to\n// also use the same Edge build to create the reference. For the client bundle,\n// we use the default and let Webpack to resolve it to the correct version.\n// 1: https://github.com/vercel/next.js/blob/16eb80b0b0be13f04a6407943664b5efd8f3d7d0/packages/next/src/server/app-render/use-flight-response.tsx#L24-L26\nexport const createServerReference = (\n  (!!process.env.NEXT_RUNTIME\n    ? // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client.edge')\n    : // eslint-disable-next-line import/no-extraneous-dependencies\n      require('react-server-dom-webpack/client')) as typeof import('react-server-dom-webpack/client')\n).createServerReference\n"],"names":["callServer","createServerReference","findSourceMapURL","process","env","NEXT_RUNTIME","require"],"mappings":"AAAA,gFAAgF;AAChF,0BAA0B;;;;;;;;;;;;;;;;;IAEjBA,UAAU,EAAA;eAAVA,eAAAA,UAAU;;IASNC,qBAAqB,EAAA;eAArBA;;IARJC,gBAAgB,EAAA;eAAhBA,qBAAAA,gBAAgB;;;+BADE;qCACM;AAQ1B,MAAMD,wBACV,CAAA,CAAC,CAACE,QAAQC,GAAG,CAACC,YAAY,GAEvBC,QAAQ,0CAERA,QAAQ,8OAAiC,EAC7CL,qBAAqB","ignoreList":[0],"debugId":null}}]
}